# Server configuration
server:
  port: 8080

# Spring application name and related configuration
spring:
  application:
    name: basic-saml
  cloud:
    gateway:
      mvc:
        routes:
          - id: google-route
            uri: https://www.google.com
            predicates:
              - Path=/gate/**

# JWT Configuration
jwt:
  # Secret key used to sign the JWT tokens (should be at least 32 characters)
  secret: ${JWT_SECRET:defaultSecretKeyWhichShouldBeAtLeast32CharactersLong}
  # Token expiration time in milliseconds (default: 1 hour)
  expiration: ${JWT_EXPIRATION:3600000}

# Logging configuration
logging:
  level:
    root: INFO
    org:
      springframework:
        security: DEBUG
        security.saml2: DEBUG
        cloud.gateway: DEBUG
        web.reactive.function.client: DEBUG
        http.server.reactive: DEBUG

  # SSL Bundles (Spring Boot 3.1+)
  #
  # An SSL bundle encapsulates keystore (client cert/private key) and truststore (trusted CAs)
  # and can be referenced in code via Spring's SslBundles API. Our ClientSSLContext retrieves
  # a bundle named by the property `client.ssl.bundle-name` (defaults to `my-ssl`).
  #
  # How to use:
  # 1) Put your JKS files under src/main/resources/ssl (or adjust the locations below).
  # 2) Update passwords/types to match your files.
  # 3) Optionally change the bundle name (e.g., `my-ssl`) and set `client.ssl.bundle-name` accordingly.
  # 4) ClientService will obtain an SSLContext from ClientSSLContext and apply it to HttpsURLConnection.
  ssl:
    bundle:
      jks:
        my-ssl: # This is the default bundle name used when client.ssl.bundle-name is not set
          # Keystore containing client certificate/private key
          keystore:
            location: classpath:ssl/MySsl.jks
            password: changeit
            type: JKS
            # alias is optional; specify if your keystore contains multiple entries
            # alias: mykey
          # Truststore with trusted CAs (can be the same JKS for simple setups)
          truststore:
            location: classpath:ssl/MySsl.jks
            password: changeit
            type: JKS

# Optional: override the bundle name here or via environment variable
# client:
#   ssl:
#     bundle-name: my-ssl
